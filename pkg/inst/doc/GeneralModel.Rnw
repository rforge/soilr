% vim:fenc=utf-8
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\author{Carlos Sierra, Susan Trumbore, Markus MÃ¼ller }
\title{How to use GeneralModel.R}
\begin{document}
\maketitle
\abstract{
The objective of this vignette is to demonstrate the application range of class Model. We will start with the most simple running example that focuses on the basic building blocks from a technical, rather abstract point of view and then show how we can exploit the abstraction to implement the well known  ICBM example.
}
\section{Abstract example}
First we load the package.
<<>>=
library("SoilR")
@
Now we create an object of class TimeMap to represent the coefficient matrix $\mathbf{A}$ as a function of time. 
In our simple example this will be just be a constant function but we are nethertheless forced to supply information about the time-domain where this function is valid. Why this requirement is sensible will be demonstrated later in the document where the time-domain data will we used to check automatically for an inconsistent model. 
<<>>=
n=3;t_start=0;t_end=1
At=TimeMap.new(
  t_start,
  t_end,
  function(t0){
        matrix(nrow=n,ncol=n,byrow=TRUE,
          c(-0.33,    0,    0, 
             0.1, -0.35,    0,   
             0,    1/3,   -0.39)
        )
  }
)
@
Now we do the same thing for the inputrate as a function of time. We also choose the simplest possible case which is a constant function of time being $1$ .
<<>>=
inputFluxes=TimeMap.new(
    t_start,
    t_end,
    function(t0){matrix(nrow=3,ncol=1,c(.1,0,0))}
) 
@
Then we define the times where we want to compute the C-content and the respirations.
<<results=hide>>=
t=seq(0,1,.1)
@ 
We also need to specify the startvalues for the C content of the pools.
<<>>=
 c0=c(0.5, 0.5, 0.5)
@
We can now assemble the Model object
<<>>=
mod=GeneralModel(t,At,c0,inputFluxes)
@ 
and ask it several questions for instance the C content:
<<>>=
Y_c=getC(mod)
@
which we can plot
%
%\SweaveOpts{echo=true}
%
\begin{figure}[htbp]
  \begin{center}
<<fig=TRUE>>=
lt1=1;  lt2=2; lt3=3 
      col1=1;  col2=2; col3=3
      plot(t,Y_c[,1],type="l",lty=lt1,col=col1,
           ylab="C stocks (arbitrary units)",xlab="Time") 
      lines(t,Y_c[,2],type="l",lty=lt2,col=col2) 
      lines(t,Y_c[,3],type="l",lty=lt3,col=col3) 
      legend(
         "topright",
         c("C in pool 1",
           "C in pool 2",
           "C in pool 3"
         ),
         lty=c(lt1,lt2,lt3),
         col=c(col1,col2,col3)
      )
@
     \caption{The amount of carbon in the pools}
  \end{center}
\end{figure}
We also could ask for the $CO_2$ flux as a function of time.
<<>>=
Y_rf=getReleaseFlux(mod)
@
\begin{figure}[htbp]
  \begin{center}
<<fig=TRUE>>=
      plot(t,Y_rf[,1],type="l",lty=lt1,col=col1,ylab="C Release (arbitrary units)",xlab="Time") 
      lines(t,Y_rf[,2],lt2,type="l",lty=lt2,col=col2) 
      lines(t,Y_rf[,3],type="l",lty=lt3,col=col3) 
      legend("topright",c("R1","R2","R3"),lty=c(lt1,lt2,lt3),col=c(col1,col2,col3))
@
     \caption{The respiration flux  }
  \end{center}
\end{figure}
Or we could look at the accumulated release of $CO_2$ which is actually a good test for the model.
<<>>=
Y_r=getRelease(mod)
@
\begin{figure}[htbp]
  \begin{center}
<<fig=TRUE>>=
      plot(t,Y_r[,1],type="l",lty=lt1,col=col1,ylab="C Release (arbitrary units)",xlab="Time") 
      lines(t,Y_r[,2],lt2,type="l",lty=lt2,col=col2) 
      lines(t,Y_r[,3],type="l",lty=lt3,col=col3) 
      legend("topleft",c("R1","R2","R3"),lty=c(lt1,lt2,lt3),col=c(col1,col2,col3))
@
     \caption{The accumulated respiration}
  \end{center}
\end{figure}
\section{Application including moisture and temperature dependence}


\end{document}
